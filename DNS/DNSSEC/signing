<html><head><meta content="text/html; charset=UTF-8" http-equiv="content-type"><style type="text/css">ol{margin:0;padding:0}table td,table th{padding:0}.c6{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:468pt;border-top-color:#000000;border-bottom-style:solid}.c8{border-right-style:solid;padding:5pt 5pt 5pt 5pt;border-bottom-color:#000000;border-top-width:1pt;border-right-width:1pt;border-left-color:#000000;vertical-align:top;border-right-color:#000000;border-left-width:1pt;border-top-style:solid;border-left-style:solid;border-bottom-width:1pt;width:117pt;border-top-color:#000000;border-bottom-style:solid}.c4{color:#000000;font-weight:700;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Courier New";font-style:normal}.c3{color:#000000;font-weight:400;text-decoration:none;vertical-align:baseline;font-size:11pt;font-family:"Courier New";font-style:normal}.c0{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:left}.c10{padding-top:0pt;padding-bottom:0pt;line-height:1.15;orphans:2;widows:2;text-align:center}.c11{border-spacing:0;border-collapse:collapse;margin-right:auto}.c12{-webkit-text-decoration-skip:none;color:#1155cc;text-decoration:underline;text-decoration-skip-ink:none}.c1{padding-top:0pt;padding-bottom:0pt;line-height:1.0;text-align:left}.c7{background-color:#ffffff;max-width:468pt;padding:72pt 72pt 72pt 72pt}.c14{color:inherit;text-decoration:inherit}.c9{font-weight:400;font-family:"Courier New"}.c13{font-weight:700;font-family:"Courier New"}.c5{height:0pt}.c2{height:11pt}.title{padding-top:0pt;color:#000000;font-size:26pt;padding-bottom:3pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}.subtitle{padding-top:0pt;color:#666666;font-size:15pt;padding-bottom:16pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}li{color:#000000;font-size:11pt;font-family:"Arial"}p{margin:0;color:#000000;font-size:11pt;font-family:"Arial"}h1{padding-top:20pt;color:#000000;font-size:20pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h2{padding-top:18pt;color:#000000;font-size:16pt;padding-bottom:6pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h3{padding-top:16pt;color:#434343;font-size:14pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h4{padding-top:14pt;color:#666666;font-size:12pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h5{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;orphans:2;widows:2;text-align:left}h6{padding-top:12pt;color:#666666;font-size:11pt;padding-bottom:4pt;font-family:"Arial";line-height:1.15;page-break-after:avoid;font-style:italic;orphans:2;widows:2;text-align:left}</style></head><body class="c7"><p class="c10"><span class="c4">DNSSEC Keys and Records Simplified</span></p><p class="c2 c10"><span class="c4"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">This article describes what happens when a zone is signed with DNSSEC. </span></p><p class="c0"><span class="c3">The steps described in this article are meant to help understand the concept of zone signing and not the actual steps for signing a zone.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Let&rsquo;s consider an unsigned zone test.com. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Below is a representation of the zone file with sample records with only the relevant fields.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><a id="t.bfd7305c38e65685d313b9ec1d2c13e72d3c79df"></a><a id="t.0"></a><table class="c11"><tbody><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c4">Records</span></p></td></tr><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">test.com IN SOA ns1.test.com. hostmaster.test.com. (</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; 2012022301 1800 1800 1814400 3600</span></p><p class="c1"><span class="c3">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; )</span></p></td></tr><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">test.com IN NS ns1.test.com. </span></p></td></tr><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">ns1.test.com IN A 1.2.3.4</span></p></td></tr></tbody></table><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Now, when we sign the zone, two key pairs are generated. A key pair consists of a private key and a public key. Such key pairs usually used in encryption or signing. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Encryption is used to protect data. When some data is encrypted with the public key, only the </span></p><p class="c0"><span class="c3">private key (which is to be kept secret) can decrypt the data. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Signing is used to verify the authenticity of data. Here the data is signed with the private key. This just means that the data to be signed and the private key go through a signing algorithm and form some new data. If the new data and the public key go through the signing algorithm the old data is formed. The new data formed is called a hash of the old data. The signing algorithm is just a set of instructions, like a mathematical formula.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Here is an example. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Signing</span></p><p class="c0 c2"><span class="c3"></span></p><a id="t.cabc53ba8e04be165aa3cef5b5470a983a85ffb4"></a><a id="t.1"></a><table class="c11"><tbody><tr class="c5"><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Data (a)</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Private Key (b)</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">SIgning Algorithm</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Hash</span></p></td></tr><tr class="c5"><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">abcd</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">3</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">add &lsquo;b&rsquo; number or characters to each character in &lsquo;a&rsquo;</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">efgh</span></p></td></tr></tbody></table><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Decoding</span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0 c2"><span class="c3"></span></p><a id="t.6ef94e4262450ec0ebb52f2ee66f5581da3c3c59"></a><a id="t.2"></a><table class="c11"><tbody><tr class="c5"><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Hash (a)</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Public Key (b)</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">SIgning Algorithm</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c4">Data</span></p></td></tr><tr class="c5"><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">efgh</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">-3</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">add &lsquo;b&rsquo; number or characters to each character in &lsquo;a&rsquo;</span></p></td><td class="c8" colspan="1" rowspan="1"><p class="c1"><span class="c3">abcd</span></p></td></tr></tbody></table><p class="c0 c2"><span class="c4"></span></p><p class="c0"><span class="c4">--------------------------------------------------------------------</span></p><p class="c0"><span class="c3">If you want to go deeper, here is a practical example. </span></p><p class="c0"><span class="c3">(on a linux box)</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Generating a private key.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl genrsa -out privkey.pem 2048</span></p><p class="c0"><span class="c3">Generating RSA private key, 2048 bit long modulus</span></p><p class="c0"><span class="c3">..........................................+++</span></p><p class="c0"><span class="c3">..............................................................................................................+++</span></p><p class="c0"><span class="c3">e is 65537 (0x10001)</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Generating the public key from the private key</span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0"><span class="c3">$ openssl rsa -in privkey.pem -pubout -out pubkey.pem</span></p><p class="c0"><span class="c3">writing RSA key</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">These two files are created . </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ ls</span></p><p class="c0"><span class="c3">privkey.pem &nbsp;pubkey.pem</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Private key</span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0"><span class="c3">$ cat privkey.pem</span></p><p class="c0"><span class="c3">-----BEGIN RSA PRIVATE KEY-----</span></p><p class="c0"><span class="c3">MIIEowIBAAKCAQEA4Kqfn3osK33k/M8lPciHdlSmGN/lmhksds0/ebiF6IAJRXsx</span></p><p class="c0"><span class="c3">sQZuFPwHlunnC7ihcIiLE0ySOjpUgLuoLuFWJ5+qwgEyYLwTN3ea1vxKR/2jsxun</span></p><p class="c0"><span class="c3">mu4dRH/SpGWhji9H5hDJ+TsAIGnB7FL+9nceFjna+m3GaTVw9Pi3xbMUyLGsIHMH</span></p><p class="c0"><span class="c3">4CfngtthT0Nq2Sti2gFF9kCusDuzTfVAOFRNfm1J5J2TgQlmA6XHNpQe+TyNFr5v</span></p><p class="c0"><span class="c3">E/dMLHTeMegvEAZQ+mRqCKtBOGrPFoyJdZjyWLCiH3tNFpt+4KxHXFvOqbqPQjqy</span></p><p class="c0"><span class="c3">lUyWHE3K89pV7+L3K6RDMmS6EMySFweWjRY3TwIDAQABAoIBAHQN75L0C2kUCXvG</span></p><p class="c0"><span class="c3">jZhSxBcONxbWYcauhleAQu/fr9ygdymbL9ogVjEk187PWPinEU4OWrlHbqoBg7FU</span></p><p class="c0"><span class="c3">PtaotFaXlh/NenaZ8NtQP34aqUxy62MUQAo6Qogl92vQzBmktuFTfuHt5mzX9MLd</span></p><p class="c0"><span class="c3">RLOQaMxWapW+qyWh443IBTZtAamBloGRUVkHARDjXtbq10Y8KPBVFHlMQigC3hVs</span></p><p class="c0"><span class="c3">nE3EEMJxUPmPF77V59qWzQNH5/W1jfGQhgavvmE+Bqo8dwFMh4rhVn2x+Yz2JgB6</span></p><p class="c0"><span class="c3">JZ1njRkM8k/W5dTfUodzLFpdUaK0oq2LjEPgqtwNqeESneKouqAguReXqEB9pqkw</span></p><p class="c0"><span class="c3">q1B6FOECgYEA8DAib5uayJHZzFtDzbYTqk9SIwTQZec5aJF55P126n9rfr2ff8S9</span></p><p class="c0"><span class="c3">OGPk5x3tfx/E1FN8cxB1RkRyFzge7Beh4TmkknuyI7vNMk6sXboPbMRLOXp6XTh4</span></p><p class="c0"><span class="c3">pwl5q7UgM+/XAY40H+1y0eDKXUv7QkrzkVEatWevUANN/JRm6clW96cCgYEA73Tn</span></p><p class="c0"><span class="c3">/e1YTtbWuSCCmWxyfB5aOb81ANbihCTUok8NXtVPacOF4O9y480ayge0jyQAUnzD</span></p><p class="c0"><span class="c3">KNyUwNvdB25lochwOgmrZkAvrByoW67vebLwJdtXZNPRVHFIGPUs3Mt4y4+CkckH</span></p><p class="c0"><span class="c3">57sv2G6wMfjHoK3LA/dWgH7jNdBpCgCVW8SouBkCgYEArSzHZ1j13K7sLd+Pn34r</span></p><p class="c0"><span class="c3">55uRSRZre02forlg/a2SU7jTNGpb2a9sDoBXxhtZ5VJug/g9vmibZbJr4Dnica8I</span></p><p class="c0"><span class="c3">VG9PLR5qbkE1zZPTyzAfdviAlEyudRAGTckTJK5PLaM7ji+NfYeiRZihz2q9GisY</span></p><p class="c0"><span class="c3">OioT6796M2JulDIbkWxNe/kCgYBAWK76umvvi6XZy5Wsusqs9c8TE4Gfvx7RmcAV</span></p><p class="c0"><span class="c3">+Z5DLJkRd7wjLNU3x+b6AUYQ7QC1KdebxGKozKxBkfX3mpAl2HFZocftvSm0sXai</span></p><p class="c0"><span class="c3">wmXsFlwOuSjYQzS3mDK9BmRodyEEIfxg1hlOVLg+RXcHg4w5fZ6eGvrdfCqtyGha</span></p><p class="c0"><span class="c3">Z6dbCQKBgGR/d5+xtzcdNmRYpqV2dd8lc0ye8kloGZRE3mCByqjAcI2nIXyFqhSi</span></p><p class="c0"><span class="c3">Hm7Hs8Pcw/bq2wPMOb9+5gsGHIE9k6yjPhTPBufgr2UtIBO7w6N+eyawiDj7Wlhn</span></p><p class="c0"><span class="c3">/4tZqDDNV9QP+YSybcyZI/GsTRCYdeF8rw/hBkXMcG/3gOqsiKOE</span></p><p class="c0"><span class="c3">-----END RSA PRIVATE KEY-----</span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0"><span class="c4">Public key</span></p><p class="c0 c2"><span class="c4"></span></p><p class="c0"><span class="c3">$ cat pubkey.pem</span></p><p class="c0"><span class="c3">-----BEGIN PUBLIC KEY-----</span></p><p class="c0"><span class="c3">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA4Kqfn3osK33k/M8lPciH</span></p><p class="c0"><span class="c3">dlSmGN/lmhksds0/ebiF6IAJRXsxsQZuFPwHlunnC7ihcIiLE0ySOjpUgLuoLuFW</span></p><p class="c0"><span class="c3">J5+qwgEyYLwTN3ea1vxKR/2jsxunmu4dRH/SpGWhji9H5hDJ+TsAIGnB7FL+9nce</span></p><p class="c0"><span class="c3">Fjna+m3GaTVw9Pi3xbMUyLGsIHMH4CfngtthT0Nq2Sti2gFF9kCusDuzTfVAOFRN</span></p><p class="c0"><span class="c3">fm1J5J2TgQlmA6XHNpQe+TyNFr5vE/dMLHTeMegvEAZQ+mRqCKtBOGrPFoyJdZjy</span></p><p class="c0"><span class="c3">WLCiH3tNFpt+4KxHXFvOqbqPQjqylUyWHE3K89pV7+L3K6RDMmS6EMySFweWjRY3</span></p><p class="c0"><span class="c3">TwIDAQAB</span></p><p class="c0"><span class="c3">-----END PUBLIC KEY-----</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">These will be the keys for our zone. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c4">Signing records.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Records in the zone are signed with the private key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Lets take for example the a record a.example.com</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Putting the record into a file.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">echo &quot;ns1.test.com IN A 1.2.3.4&quot; &gt;arecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Signing the file with the A record.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -sign privkey.pem -out arecord.txt.sha256 arecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">A file named arecord.txt.sha256 with the signature is created.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ ls | grep sha256</span></p><p class="c0"><span class="c3">arecord.txt.sha256</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">This signature can verify the authenticity of the original file using the public key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c9">$ openssl dgst -sha256 -verify </span><span class="c13">pubkey.pem</span><span class="c9">&nbsp;-signature </span><span class="c13">arecord.txt.sha256</span><span class="c9">&nbsp;</span><span class="c4">arecord.txt</span></p><p class="c0"><span class="c3">Verified OK</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">If the original file is changed, or if a different file is used, the verification will fail. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Here is an example. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ echo test &gt;&gt; arecord.txt</span></p><p class="c0"><span class="c3">$ cat arecord.txt</span></p><p class="c0"><span class="c3">ns1.test.com IN A 1.2.3.4</span></p><p class="c0"><span class="c3">test</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Now the original file is changed. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Let&rsquo;s try the verification again. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -verify pubkey.pem -signature arecord.txt.sha256 arecord.txt</span></p><p class="c0"><span class="c3">Verification Failure</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Lets try the verification with a different file. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ echo &quot;ns1.test.com IN A 4.5.6.7&quot; &gt;fakerecord.txt</span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -verify pubkey.pem -signature arecord.txt.sha256 fakerecord.txt</span></p><p class="c0"><span class="c3">Verification Failure</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">---------------------------------------------------------------------</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">As in the above example, all the records in the zone are signed with a private key. The signature is then encoded(same as hashing) with base64 and an RRSIG record is created with the encoding for each record. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Please see below example.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">--------------------------------------------------------------------</span></p><p class="c0"><span class="c3">$ echo &quot;test.com IN SOA ns1.test.com. hostmaster.test.com. (2012022301 1800 1800 1814400 3600) &quot; &gt; soarecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ echo &quot;test.com IN NS ns1.test.com.&quot; &gt;nsrecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ echo &quot;ns1.test.com IN A 1.2.3.4&quot; &gt;arecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ ls</span></p><p class="c0"><span class="c3">arecord.txt &nbsp;nsrecord.txt &nbsp;privkey.pem &nbsp;pubkey.pem &nbsp;soarecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -sign privkey.pem -out soarecord.txt.sha256 soarecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -sign privkey.pem -out nsrecord.txt.sha256 nsrecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ openssl dgst -sha256 -sign privkey.pem -out arecord.txt.sha256 arecord.txt</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ ls</span></p><p class="c0"><span class="c3">arecord.txt &nbsp;arecord.txt.sha256 &nbsp;nsrecord.txt &nbsp;nsrecord.txt.sha256 &nbsp;privkey.pem &nbsp;pubkey.pem &nbsp;soarecord.txt &nbsp;soarecord.txt.sha256</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ base64 soarecord.txt.sha256</span></p><p class="c0"><span class="c3">MMoccLV19wocCHo2hdLSjKy5Irp2imxwXRone1eRpmSMpr33E3o1bcMORwyHutTtl0BKPPnlJiMK</span></p><p class="c0"><span class="c3">mODMydZmRaM6n3UEDcOXUKTwWwDYihsM4/bic53zhBuS+fIn9EowKmEKJmgP5DCLxt5qmdK5xfZS</span></p><p class="c0"><span class="c3">F20OKi/SHOJDy4YrGJrfOiI3Lp6FEVgFcNWZy+CVpXAItDsn5S2mkFv87oTsID01XTExRWvJRQSF</span></p><p class="c0"><span class="c3">sDvOBYF7eEWmgXi7PnST0xN1fu3kwonmCOsXU2r7xJA1pmdyt7qQZGOLPTqmNftOALRySbrtiH27</span></p><p class="c0"><span class="c3">AO4yct+54/sFEzxwpZ80FFZiE6sOS8FVHuLNTg==</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ base64 nsrecord.txt.sha256</span></p><p class="c0"><span class="c3">b5iHVdENqbPoOt7kx6uXw+tdR5pfITohuwoXjSMvFbVgigAyiWky0UqlR1G+K4YrVXWka3m+vERs</span></p><p class="c0"><span class="c3">H6QRndMrHVzvJgM4X9PTxgtgRC8skgg6HSyO/YH5lP7YXRNGPjWXnxOW0ry6x7+ij5WgwHB7TWkq</span></p><p class="c0"><span class="c3">dU/HcVNupoYZ/5R0aGaDe5tyFgKtMW7dS3EieR08Vg0lGNUP8eEB9Xf0n+nhADj0S8pFnJtn2AUh</span></p><p class="c0"><span class="c3">+gWNdLDkdNpmX9xFDZOS3JrlZem5FsGf+VvcgDySxVRabDsfioAzwxHbSgbmwsbiUM7no1ZX8xJU</span></p><p class="c0"><span class="c3">62TCI3uNe6FHOyyJELsiUHEnzneLANqpU/irkg==</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">$ base64 arecord.txt.sha256</span></p><p class="c0"><span class="c3">rOORLSorofC5s8DeT4n2HvnW5EV7rrR+ZpbOk5rnNAwJh1iNx24J687YgLrpotxzbZUGPUIlU3nN</span></p><p class="c0"><span class="c3">tn50LzNZ6AicCFB/wppTq1a2jswmeF6YiKWXF/cjhvSG3Q46Vdlfe2Mn4hrNEaS+OEk6TjdTT7py</span></p><p class="c0"><span class="c3">ajwUDuzIrH9FU/Z2hYles3GIWBaffD9HrC+NuOvG4mMB8Z72ABin7oURKowZSQ2WsaQu5XlxWMaE</span></p><p class="c0"><span class="c3">TLx9pKQJD+r8naCD1XCCvJhwWLA78rnreRVtTv7gRYuyiCQIWhkBkxs0cSGcrKxy+fiJ/83vWNMl</span></p><p class="c0"><span class="c3">U3GRLY80wvDLHU4M84L+u0d++WcfPV5KKtudbQ==</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Now with the base64 encoded strings obtained, RRSIG records are created like below. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><a id="t.3901a0b1aaca3815e9ed16c94d8aba8b6adf5635"></a><a id="t.3"></a><table class="c11"><tbody><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">test.com IN RRSIG SOA MMoccLV19wocCHo2hdLSjKy5Irp2imxwXRone1eRpmSMpr33E3o1bcMORwyHutTtl0BKPPnlJiMK</span></p><p class="c0"><span class="c3">mODMydZmRaM6n3UEDcOXUKTwWwDYihsM4/bic53zhBuS+fIn9EowKmEKJmgP5DCLxt5qmdK5xfZS</span></p><p class="c0"><span class="c3">F20OKi/SHOJDy4YrGJrfOiI3Lp6FEVgFcNWZy+CVpXAItDsn5S2mkFv87oTsID01XTExRWvJRQSF</span></p><p class="c0"><span class="c3">sDvOBYF7eEWmgXi7PnST0xN1fu3kwonmCOsXU2r7xJA1pmdyt7qQZGOLPTqmNftOALRySbrtiH27</span></p><p class="c0"><span class="c3">AO4yct+54/sFEzxwpZ80FFZiE6sOS8FVHuLNTg==</span></p></td></tr><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">test.com IN RRSIG NS b5iHVdENqbPoOt7kx6uXw+tdR5pfITohuwoXjSMvFbVgigAyiWky0UqlR1G+K4YrVXWka3m+vERs</span></p><p class="c0"><span class="c3">H6QRndMrHVzvJgM4X9PTxgtgRC8skgg6HSyO/YH5lP7YXRNGPjWXnxOW0ry6x7+ij5WgwHB7TWkq</span></p><p class="c0"><span class="c3">dU/HcVNupoYZ/5R0aGaDe5tyFgKtMW7dS3EieR08Vg0lGNUP8eEB9Xf0n+nhADj0S8pFnJtn2AUh</span></p><p class="c0"><span class="c3">+gWNdLDkdNpmX9xFDZOS3JrlZem5FsGf+VvcgDySxVRabDsfioAzwxHbSgbmwsbiUM7no1ZX8xJU</span></p><p class="c0"><span class="c3">62TCI3uNe6FHOyyJELsiUHEnzneLANqpU/irkg==</span></p></td></tr><tr class="c5"><td class="c6" colspan="1" rowspan="1"><p class="c1"><span class="c3">Ns1.test.com IN RRSIG A rOORLSorofC5s8DeT4n2HvnW5EV7rrR+ZpbOk5rnNAwJh1iNx24J687YgLrpotxzbZUGPUIlU3nN</span></p><p class="c0"><span class="c3">tn50LzNZ6AicCFB/wppTq1a2jswmeF6YiKWXF/cjhvSG3Q46Vdlfe2Mn4hrNEaS+OEk6TjdTT7py</span></p><p class="c0"><span class="c3">ajwUDuzIrH9FU/Z2hYles3GIWBaffD9HrC+NuOvG4mMB8Z72ABin7oURKowZSQ2WsaQu5XlxWMaE</span></p><p class="c0"><span class="c3">TLx9pKQJD+r8naCD1XCCvJhwWLA78rnreRVtTv7gRYuyiCQIWhkBkxs0cSGcrKxy+fiJ/83vWNMl</span></p><p class="c0"><span class="c3">U3GRLY80wvDLHU4M84L+u0d++WcfPV5KKtudbQ==</span></p></td></tr></tbody></table><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Note: The above records are not in the true structure of these records. This is only a representation to help understand the concept. </span></p><p class="c0"><span class="c9">For the real records structure and understanding the different fields in the records, refer </span><span class="c9 c12"><a class="c14" href="https://www.google.com/url?q=https://www.ietf.org/rfc/rfc4034.txt&amp;sa=D&amp;ust=1516845727535000&amp;usg=AFQjCNGZ9CG6SDbnWquxQIcmuYF9S6340Q">RFC 4034</a></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">--------------------------------------------------------------------</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">These records can be decoded with base64 to get the signatures and the signatures can be verified with the public key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">For such verification, the public key for the zone needs to be distributed to the clients. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">The public key is encoded with base64 and the encoding is used to create a DNSKEY record for the zone. This DNSKEY record is known as a Zone Signing Key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c9">As mentioned earlier in the article, when a zone is signed, </span><span class="c13">two </span><span class="c3">key pairs are generated. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">The second key pair is used to sign and verify the public key for the zone(Zone Signing Key). </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">The public key is signed using the second private key, the signature is encoded in base64 and the encoding is used to create an RRSIG for the Zone Signing Key. The second public key is encoded with base64 &nbsp;another DNSKEY record known as the Key Signing Key. This record is used to verify the authenticity of the Zone Signing Key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c9">Now the public key of the Key Signing Key is encoded/hashed with SHA-1 or SHA-256 and this encoding/hash is used</span><span class="c3">&nbsp;to create another record called the DS record. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">The DS record is placed at the parent for the zone. In this case, the parent for &lsquo;test.com.&rsquo; is &lsquo;com.&rsquo;.</span></p><p class="c0"><span class="c3">The DS record can be used to verify the authenticity of the Key Signing Key. </span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Diagram 1.</span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c9">&nbsp;</span><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 344.00px; height: 239.00px;"><img alt="" src="images/image3.png" style="width: 344.00px; height: 239.00px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 531.50px;"><img alt="" src="images/image2.png" style="width: 624.00px; height: 531.50px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0"><span style="overflow: hidden; display: inline-block; margin: 0.00px 0.00px; border: 0.00px solid #000000; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px); width: 624.00px; height: 441.33px;"><img alt="" src="images/image1.png" style="width: 624.00px; height: 441.33px; margin-left: 0.00px; margin-top: 0.00px; transform: rotate(0.00rad) translateZ(0px); -webkit-transform: rotate(0.00rad) translateZ(0px);" title=""></span></p><p class="c0 c2"><span class="c3"></span></p><p class="c0"><span class="c3">Note: I have taken some liberties with this article in the interest of Simplicity. For full and accurate information, refer DNSSEC RFCs.</span></p><p class="c0"><span class="c9">NXDOMAIN validation is not included in this article.</span></p></body></html>